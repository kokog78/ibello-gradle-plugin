apply plugin: "java"
apply plugin: "maven-publish"
apply plugin: "signing"

group 'hu.ibello'
version '1.0'

repositories {
    mavenLocal()
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

signing {
    sign configurations.archives
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}

publishing {
    repositories {
        maven {
            def releaseRepo = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotRepo = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = isReleaseVersion ? releaseRepo : snapshotRepo
            credentials {
                username = "$ossrhUsername"
                password = "$ossrhPassword"
            }
        }
    }
    
    publications {
        mavenJava(MavenPublication) {
            pom {
	            groupId 'hu.ibello'
                name = 'Ibello Gradle Plugin'
                description = 'Gradle plugin for the ibello test framework.'
                url = 'https://github.com/kokog78/ibello-gradle-plugin'
	            from components.java

                scm {
                    connection = 'scm:git:https://github.com/kokog78/ibello-gradle-plugin.git'
                    developerConnection = 'scm:git:git@github.com:kokog78/ibello-gradle-plugin.git'
                    url = 'https://github.com/kokog78/ibello-gradle-plugin'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'kokog'
                        name = 'Kornel Simon'
                        email = 'kornel.simon@ibello.hu'
                    }
                }
            }
        }
    }
}

dependencies {
	compile gradleApi()
	testCompile group: 'org.assertj', name: 'assertj-core', version: '3.12.2'
	testCompile group: 'junit', name: 'junit', version: '4.12'
}

task stage(group: 'build', dependsOn: ['build', 'publishToMavenLocal']) {
	description 'Build the project and publish it to the local Maven repository.'
}

/*
Tested with gradle 6.4.1

Content of the gradle.properties should be:

signing.keyId={key id}
signing.password={key password}
signing.secretKeyRingFile={full path to secring.gpg}
ossrhUsername={ossrh user}
ossrhPassword={ossrh password}

The secring file can be generated with:
gpg --keyring secring.gpg --export-secret-keys > {full path to secring.gpg}

The key id can be obtained with:
gpg --list-keys --keyid-format 0xSHORT
*/
